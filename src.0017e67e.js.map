{"version":3,"sources":["logger.ts","../node_modules/fetch-jsonp/build/fetch-jsonp.js","services/reddit.ts","state.ts","index.ts"],"names":[],"mappings":";AAAa,aAAA,IAAA,EAAA,MAAA,KAAA,gBAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAAA,QAAA,OAAS,SAAC,GAAE,IAAA,EAAQ,EAAA,SACxB,MAAA,CACL,MAAO,SAAC,GAAS,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GACX,EAAS,SAAS,UAAU,QAAQ,IAAG,MAAX,QAAO,EAAA,CAAK,IAAI,EAAO,KAAQ;;;;AC6HrE,IAAA,EAAA,EAAA,UAAA,IAhIA,SAAA,EAAA,GACA,GAAA,mBAAA,GAAA,EAAA,IACA,EAAA,CAAA,UAAA,UAAA,QACA,GAAA,oBAAA,SAAA,oBAAA,OACA,EAAA,QAAA,YACA,CACA,IAAA,EAAA,CACA,QAAA,IAEA,EAAA,EAAA,QAAA,GACA,EAAA,WAAA,EAAA,SAVA,CAYA,KAAA,SAAA,EAAA,GACA,aAEA,IAAA,EAAA,CACA,QAAA,IACA,cAAA,WACA,sBAAA,MAOA,SAAA,EAAA,GAGA,WACA,OAAA,GACA,MAAA,GACA,OAAA,QAAA,GAIA,SAAA,EAAA,GACA,IAAA,EAAA,SAAA,eAAA,GACA,GACA,SAAA,qBAAA,QAAA,GAAA,YAAA,GAyFA,EAAA,QArFA,SAAA,GACA,IAAA,EAAA,UAAA,QAAA,QAAA,IAAA,UAAA,GAAA,GAAA,UAAA,GAGA,EAAA,EACA,EAAA,EAAA,SAAA,EAAA,QACA,EAAA,EAAA,eAAA,EAAA,cAEA,OAAA,EAEA,OAAA,IAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,uBA/BA,SAAA,KAAA,MAAA,IAAA,KAAA,KAAA,IAAA,KAAA,UAgCA,EAAA,EAAA,IAAA,EAEA,OAAA,GAAA,SAAA,GACA,EAAA,CACA,IAAA,EAEA,KAAA,WACA,OAAA,QAAA,QAAA,MAIA,GAAA,aAAA,GAEA,EAAA,GAEA,EAAA,IAIA,IAAA,IAAA,EAAA,QAAA,KAAA,IAAA,IAEA,IAAA,EAAA,SAAA,cAAA,UACA,EAAA,aAAA,MAAA,GAAA,EAAA,EAAA,IAAA,GACA,EAAA,SACA,EAAA,aAAA,UAAA,EAAA,SAEA,EAAA,OACA,EAAA,aAAA,QAAA,EAAA,OAEA,EAAA,gBACA,EAAA,aAAA,iBAAA,EAAA,gBAEA,EAAA,GAAA,EACA,SAAA,qBAAA,QAAA,GAAA,YAAA,GAEA,EAAA,WAAA,WACA,EAAA,IAAA,MAAA,oBAAA,EAAA,eAEA,EAAA,GACA,EAAA,GACA,OAAA,GAAA,WACA,EAAA,KAEA,GAGA,EAAA,QAAA,WACA,EAAA,IAAA,MAAA,oBAAA,EAAA,YAEA,EAAA,GACA,EAAA,GACA,GAAA,aAAA;;ACvEC,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAlCD,IAAA,EAAA,EAAA,QAAA,gBAmBA,SAAsB,EAAW,GAA2B,OAAA,EAAA,UAAA,EAAA,QAAO,WAelE,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAdkB,MAAA,CAAA,EAAM,EACrB,KAAK,EAAO,UAAS,IAAI,EAAO,OAChC,SAAS,EAAO,MAAK,MAAM,EAAO,KAAI,UAAU,EAAO,OAY1D,KAAA,EAVkB,MAAA,CAAA,EAJA,EAAA,OAIe,QAUjC,KAAA,EATC,MAAA,CAAA,EADiB,EAAA,OAAqB,KAC1B,eAGd,SAAe,EAAS,EAAc,GAMrC,YANqC,IAAA,IAAA,EAAA,IAMrC,EAAA,UAAA,OAAA,EAAA,WAAA,OAAA,EAAA,KAAA,SAAA,GALC,MAAA,CAAA,EAAO,EAAA,QAAW,0BAA0B,EAAI,kBAAkB,EAAU,CAC1E,cAAe,QACf,MAAO,GACP,eAAgB,UAbpB,QAAA,WAAA;;ACnBa,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,MAAQ,SAAC,QAAA,IAAA,IAAA,EAAA,IAChB,IAAA,EAAQ,EACL,MAAA,CACL,IAAK,SAAC,GAEG,OADP,EAAK,EAAA,EAAA,GAAQ,GAAU,IAGzB,IAAK,WAAW,OAAA;;ACOpB,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAdA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,qBACA,EAAA,QAAA,WAEM,EAAc,WAEd,OADc,aAAa,QAAQ,SAE9B,CAAC,SAEH,IAGH,EAAS,EAAA,OAAO,CAAE,SAAU,MAEjC,OAAA,OAAA,OAAA,EAAA,WA2EU,SAAA,EAAmB,GAAE,IAAA,EAAQ,EAAA,SAAE,EAAO,EAAA,QAAE,EAAO,EAAA,QAChD,EAAS,EAAM,YACjB,IAAC,EAAO,OACH,OAAA,EAAQ,CAAE,QAAS,wBAEtB,IAAA,EAAU,EAAO,IAAI,SAAC,EAAO,GAAO,MAAA,CAAE,KAAM,EAAM,KAAM,MAAO,KAE/D,EAAW,SAAS,eAAe,WAclC,SAAiB,EAAU,GAClC,EAAS,UAAY,GACrB,EAAQ,QAAQ,SAAC,GACT,IAAA,EAAW,SAAS,cAAc,UACxC,EAAS,MAAQ,EAAO,MACxB,EAAS,KAAO,EAAO,KACvB,EAAS,YAAY,KAlBvB,CAAiB,EAAU,GAE3B,EAAS,SAAW,SAAC,GACnB,EAAS,EAAO,EAAE,OAAF,cAGF,IAAZ,IACF,EAAO,MAAM,gBAAiB,EAAO,IACrC,EAAS,EAAO,KA5FtB,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAKgB,OAJR,EAAS,SAAS,eAAe,SAEhC,MAAQ,yBAED,CAAA,EAAM,EAAA,WAAW,CAC7B,UAAW,wBACX,OAAQ,MACR,KAAM,MACN,MAAO,KATX,KAAA,EAAA,OAKQ,EAAQ,EAAA,QAOJ,SACR,EAAO,MAAQ,EAAM,GAAG,KAAK,UAGzB,EAAQ,OAAO,gBACf,EAAQ,EAAA,QAER,EAAoB,SAAC,GACzB,EAAO,MAAM,iBAAkB,GAC/B,EAAM,IAAI,CAAE,MAAK,KAGb,EAAyB,WACzB,GAAC,EAAO,MAAR,CACI,IAAA,EAAU,EAAM,MAAK,MACxB,GAwCE,SAAM,EAA6B,GAC1C,EAAO,MAAM,QAAS,CAAE,KAAI,EAAE,MAAK,IACnC,EAAM,SACA,IAAA,EAAY,IAAI,yBAAyB,GAC/C,EAAU,MAAQ,EAClB,EAAM,MAAM,GA5CZ,CAAM,EAAO,EAAO,SAGhB,EAAyB,WAC7B,EAAM,SAGF,EAA0B,WAC9B,EAAM,UAGF,EAA0B,WAC9B,EAAO,MAAM,gBAAiB,gBAC9B,EAAmB,CACjB,SAAU,EACV,QAAS,EACT,QAAS,KAIP,EAAc,SAAC,GA0DZ,IAAmB,EAAA,EAzDP,EAAI,QA0DvB,MAAM,IAvDR,SAAS,eAAe,aAAa,QAAU,WAAM,OAAA,KACrD,SAAS,eAAe,aAAa,QAAU,WAAM,OAAA,KACrD,SAAS,eAAe,cAAc,QAAU,WAAM,OAAA,KACtD,SAAS,eAAe,cAAc,QAAU,WAC9C,OAAA,KAEF,OAAO,gBAAgB,gBAAkB,WACvC,EAAO,MAAM,gBAAiB,gBAC9B,EAAmB,CACjB,SAAU,EACV,QAAS,EACT,QAAS,KA/Df,CAAA","file":"src.0017e67e.js","sourceRoot":"../src","sourcesContent":["export const Logger = ({ logLevel }) => {\n  return {\n    debug: (context, ...msg) => {\n      if (logLevel.includes(\"debug\")) console.log(`[${context}]`, ...msg);\n    },\n  };\n};\n","(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.fetchJsonp = mod.exports;\n  }\n})(this, function (exports, module) {\n  'use strict';\n\n  var defaultOptions = {\n    timeout: 5000,\n    jsonpCallback: 'callback',\n    jsonpCallbackFunction: null\n  };\n\n  function generateCallbackFunction() {\n    return 'jsonp_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n  }\n\n  function clearFunction(functionName) {\n    // IE8 throws an exception when you try to delete a property on window\n    // http://stackoverflow.com/a/1824228/751089\n    try {\n      delete window[functionName];\n    } catch (e) {\n      window[functionName] = undefined;\n    }\n  }\n\n  function removeScript(scriptId) {\n    var script = document.getElementById(scriptId);\n    if (script) {\n      document.getElementsByTagName('head')[0].removeChild(script);\n    }\n  }\n\n  function fetchJsonp(_url) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    // to avoid param reassign\n    var url = _url;\n    var timeout = options.timeout || defaultOptions.timeout;\n    var jsonpCallback = options.jsonpCallback || defaultOptions.jsonpCallback;\n\n    var timeoutId = undefined;\n\n    return new Promise(function (resolve, reject) {\n      var callbackFunction = options.jsonpCallbackFunction || generateCallbackFunction();\n      var scriptId = jsonpCallback + '_' + callbackFunction;\n\n      window[callbackFunction] = function (response) {\n        resolve({\n          ok: true,\n          // keep consistent with fetch API\n          json: function json() {\n            return Promise.resolve(response);\n          }\n        });\n\n        if (timeoutId) clearTimeout(timeoutId);\n\n        removeScript(scriptId);\n\n        clearFunction(callbackFunction);\n      };\n\n      // Check if the user set their own params, and if not add a ? to start a list of params\n      url += url.indexOf('?') === -1 ? '?' : '&';\n\n      var jsonpScript = document.createElement('script');\n      jsonpScript.setAttribute('src', '' + url + jsonpCallback + '=' + callbackFunction);\n      if (options.charset) {\n        jsonpScript.setAttribute('charset', options.charset);\n      }\n      if (options.nonce) {\n        jsonpScript.setAttribute('nonce', options.nonce);\n      }\n      if (options.referrerPolicy) {\n        jsonpScript.setAttribute('referrerPolicy', options.referrerPolicy);\n      }\n      jsonpScript.id = scriptId;\n      document.getElementsByTagName('head')[0].appendChild(jsonpScript);\n\n      timeoutId = setTimeout(function () {\n        reject(new Error('JSONP request to ' + _url + ' timed out'));\n\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        window[callbackFunction] = function () {\n          clearFunction(callbackFunction);\n        };\n      }, timeout);\n\n      // Caught if got 404/500\n      jsonpScript.onerror = function () {\n        reject(new Error('JSONP request to ' + _url + ' failed'));\n\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        if (timeoutId) clearTimeout(timeoutId);\n      };\n    });\n  }\n\n  // export as global function\n  /*\n  let local;\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n  local.fetchJsonp = fetchJsonp;\n  */\n\n  module.exports = fetchJsonp;\n});","import fetchJsonp from 'fetch-jsonp';\n\ntype fetchPostsParams = {\n  subreddit: string;\n  limit: number;\n  filter: string;\n  after?: string;\n  time: 'all' | 'month' | 'week' | 'day' | 'hour';\n};\n\ntype Post = {\n  data: {\n    selftext: string;\n    subreddit: string;\n    author_fullname: string;\n    gilded: number;\n  };\n};\n\nexport async function fetchPosts(params: fetchPostsParams): Promise<Post[]> {\n  const response = await jsonpApi(\n    `r/${params.subreddit}/${params.filter}`,\n    `after=${params.after}&t=${params.time}&limit=${params.time}`,\n  );\n  const { data } = await response.json();\n  return data.children;\n}\n\nasync function jsonpApi(post: string, params = '') {\n  return fetchJsonp(`https://www.reddit.com/${post}/.json?jsonp=?&${params}`, {\n    jsonpCallback: 'jsonp',\n    nonce: '',\n    referrerPolicy: '',\n  });\n}\n","export const State = (initalState = {}) => {\n  let state = initalState;\n  return {\n    set: (update) => {\n      state = { ...state, ...update };\n      return state;\n    },\n    get: (): any => state,\n  };\n};\n","import { Logger } from './logger';\nimport { fetchPosts } from './services/reddit';\nimport { State } from './state';\n\nconst getLogLevel = () => {\n  const debugMode = localStorage.getItem('debug');\n  if (debugMode || process.env.NODE_ENV === 'development') {\n    return ['debug'];\n  }\n  return [];\n};\n\nconst logger = Logger({ logLevel: getLogLevel() });\n\n(async () => {\n  const textEl = document.getElementById('text') as HTMLInputElement;\n\n  textEl.value = 'loading reddit post...';\n\n  const posts = await fetchPosts({\n    subreddit: 'BestofRedditorUpdates',\n    filter: 'top',\n    time: 'day',\n    limit: 1,\n  });\n\n  if (posts.length) {\n    textEl.value = posts[0].data.selftext;\n  }\n\n  const synth = window.speechSynthesis;\n  const state = State();\n\n  const handleVoiceSelect = (voice) => {\n    logger.debug('voice selected', voice);\n    state.set({ voice });\n  };\n\n  const handleSpeakButtonClick = () => {\n    if (!textEl.value) return;\n    const { voice } = state.get();\n    if (!voice) return;\n    speak(voice, textEl.value);\n  };\n\n  const handlePauseButtonClick = () => {\n    synth.pause();\n  }\n\n  const handleResumeButtonClick = () => {\n    synth.resume();\n  }\n\n  const handleReloadButtonClick = () => {\n    logger.debug('voice options', 'render start');\n    renderVoiceOptions({\n      onSelect: handleVoiceSelect,\n      onError: handleError,\n      initial: 0,\n    });\n  };\n\n  const handleError = (err) => {\n    renderErrorMessage(err.message);\n  };\n\n  document.getElementById('speak-btn').onclick = () => handleSpeakButtonClick();\n  document.getElementById('pause-btn').onclick = () => handlePauseButtonClick();\n  document.getElementById('resume-btn').onclick = () => handleResumeButtonClick();\n  document.getElementById('reload-btn').onclick = () =>\n    handleReloadButtonClick();\n\n  window.speechSynthesis.onvoiceschanged = () => {\n    logger.debug('voice options', 'render start');\n    renderVoiceOptions({\n      onSelect: handleVoiceSelect,\n      onError: handleError,\n      initial: 0,\n    });\n  };\n\n  function speak(voice: SpeechSynthesisVoice, text: string) {\n    logger.debug('speak', { text, voice });\n    synth.cancel();\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.voice = voice;\n    synth.speak(utterance);\n  }\n\n  function renderVoiceOptions({ onSelect, onError, initial }) {\n    const voices = synth.getVoices();\n    if (!voices.length) {\n      return onError({ message: 'no voices available' });\n    }\n    const options = voices.map((voice, i) => ({ text: voice.name, value: i }));\n\n    const selectEl = document.getElementById('voices');\n\n    setSelectOptions(selectEl, options);\n\n    selectEl.onchange = (e) => {\n      onSelect(voices[e.target['value']]);\n    };\n\n    if (initial !== undefined) {\n      logger.debug('initial voice', voices[initial]);\n      onSelect(voices[initial]);\n    }\n  }\n\n  function setSelectOptions(selectEl, options) {\n    selectEl.innerHTML = '';\n    options.forEach((option) => {\n      const optionEl = document.createElement('option');\n      optionEl.value = option.value;\n      optionEl.text = option.text;\n      selectEl.appendChild(optionEl);\n    });\n  }\n\n  function renderErrorMessage(message: string) {\n    alert(message);\n  }\n})();\n"]}